name: Deploy VuePress Site

on:
  push:
    branches:
      - master  # 当 master 分支有新的 push 时触发

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ 检出代码
        uses: actions/checkout@v3

      - name: 🔧 设置 Node.js 环境
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm' # 保持 npm 缓存，因为它现在用于全局安装 pnpm

      - name: 📦 安装 pnpm (通过 npm 全局安装)
        run: npm install -g pnpm@8

      - name: 🔍 验证 pnpm 安装和版本
        run: pnpm -v

      - name: 🗑️ 移除其他锁定文件 (保险措施)
        # 这项措施有助于消除任何可能的混淆
        run: |
          rm -f package-lock.json
          rm -f npm-shrinkwrap.json
          rm -f yarn.lock
          echo "Removed non-pnpm lock files."

      - name: 📦 安装项目依赖
        # 确保 pnpm 在项目根目录安装依赖，并且可以接受非严格模式
        run: pnpm install --no-frozen-lockfile

      - name: ✅ 批准构建脚本
        run: pnpm approve-builds @parcel/watcher esbuild vue-demi

      - name: 🔧 安装 sass（可选）
        run: pnpm add -D sass-embedded sass

      - name: 🔧 配置 Git 用户
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: 🏗️ 构建 VuePress
        # 显式地通过 pnpm 执行 build 脚本
        run: pnpm run build

      - name: 🚀 部署到 GitHub Pages
        # 显式地通过 pnpm 执行 deploy 脚本
        run: pnpm run deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}