name: Deploy VuePress Site

on:
  push:
    branches:
      - master

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ 检出代码
        uses: actions/checkout@v3

      - name: 🔧 设置 Node.js 环境
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          # 重要：不设置缓存类型或设置为 'npm'，避免 setup-node 混淆
          # 我们会手动安装 pnpm 并管理其 PATH
          cache: 'npm'

      - name: 📦 手动安装 pnpm v8
        # 这是一种更直接和可靠的 pnpm 安装方式
        run: |
          npm install -g pnpm@8 # 或者直接下载二进制文件
          # 验证 pnpm 是否在 PATH 中
          pnpm -v
        env:
          # 确保 PNPM_HOME 被设置，并且在 PATH 中
          # 通常 npm -g 安装的包会自动添加到 PATH
          PNPM_HOME: ${{ runner.tool_cache }}/pnpm/8.x/x64 # 这是一个示例路径，实际由 npm -g 决定

      - name: 📦 安装项目依赖
        # 确保 pnpm 在项目根目录安装依赖，并且可以接受非严格模式
        run: pnpm install --no-frozen-lockfile

      - name: ✅ 批准构建脚本
        run: pnpm approve-builds @parcel/watcher esbuild vue-demi

      - name: 🔧 安装 sass（可选）
        run: pnpm add -D sass-embedded sass

      - name: 🔧 配置 Git 用户
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: 🏗️ 构建 VuePress
        run: pnpm run build

      - name: 🚀 部署到 GitHub Pages
        run: pnpm run deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}